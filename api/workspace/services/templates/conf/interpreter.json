{
    "interpreterSettings": {
      "angular": {
        "id": "angular",
        "name": "angular",
        "group": "angular",
        "properties": {},
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "angular",
            "class": "org.apache.zeppelin.angular.AngularInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "editOnDblClick": true,
              "completionSupport": false
            }
          },
          {
            "name": "ng",
            "class": "org.apache.zeppelin.angular.AngularInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "editOnDblClick": true,
              "completionSupport": false
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      },
      "python": {
        "id": "python",
        "name": "python",
        "group": "python",
        "properties": {
          "zeppelin.python": {
            "name": "zeppelin.python",
            "value": "python",
            "type": "string",
            "description": "Python binary executable path. It is set to python by default.(assume python is in your $PATH)"
          },
          "zeppelin.python.maxResult": {
            "name": "zeppelin.python.maxResult",
            "value": "1000",
            "type": "number",
            "description": "Max number of dataframe rows to display."
          },
          "zeppelin.python.useIPython": {
            "name": "zeppelin.python.useIPython",
            "value": true,
            "type": "checkbox",
            "description": "Whether use IPython when it is available in `%python`"
          },
          "zeppelin.ipython.launch.timeout": {
            "name": "zeppelin.ipython.launch.timeout",
            "value": "30000",
            "type": "number",
            "description": "Time out for ipython launch"
          },
          "zeppelin.ipython.grpc.message_size": {
            "name": "zeppelin.ipython.grpc.message_size",
            "value": "33554432",
            "type": "number",
            "description": "grpc message size, default is 32M"
          }
        },
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "python",
            "class": "org.apache.zeppelin.python.PythonInterpreter",
            "defaultInterpreter": true,
            "editor": {
              "language": "python",
              "editOnDblClick": false,
              "completionSupport": true
            }
          },
          {
            "name": "ipython",
            "class": "org.apache.zeppelin.python.IPythonInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "python",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": true
            }
          },
          {
            "name": "sql",
            "class": "org.apache.zeppelin.python.PythonInterpreterPandasSql",
            "defaultInterpreter": false,
            "editor": {
              "language": "sql",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": false
            }
          },
          {
            "name": "conda",
            "class": "org.apache.zeppelin.python.PythonCondaInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "sh",
              "editOnDblClick": false,
              "completionSupport": false
            }
          },
          {
            "name": "docker",
            "class": "org.apache.zeppelin.python.PythonDockerInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "sh",
              "editOnDblClick": false,
              "completionSupport": false
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      },
      "jupyter": {
        "id": "jupyter",
        "name": "jupyter",
        "group": "jupyter",
        "properties": {},
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "jupyter",
            "class": "org.apache.zeppelin.jupyter.JupyterInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "text",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": true
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      },
      "sh": {
        "id": "sh",
        "name": "sh",
        "group": "sh",
        "properties": {
          "shell.command.timeout.millisecs": {
            "name": "shell.command.timeout.millisecs",
            "value": "60000",
            "type": "number",
            "description": "Shell command time out in millisecs. Default \u003d 60000"
          },
          "shell.command.timeout.check.interval": {
            "name": "shell.command.timeout.check.interval",
            "value": "60000",
            "type": "number",
            "description": "Shell command output check interval in millisecs. Default \u003d 10000"
          },
          "shell.working.directory.user.home": {
            "name": "shell.working.directory.user.home",
            "value": false,
            "type": "checkbox",
            "description": "If this set to true, the shell\u0027s working directory will be set to user home"
          },
          "zeppelin.shell.auth.type": {
            "name": "zeppelin.shell.auth.type",
            "value": "",
            "type": "string",
            "description": "If auth type is needed, Example: KERBEROS"
          },
          "zeppelin.shell.keytab.location": {
            "name": "zeppelin.shell.keytab.location",
            "value": "",
            "type": "string",
            "description": "Kerberos keytab location"
          },
          "zeppelin.shell.principal": {
            "name": "zeppelin.shell.principal",
            "value": "",
            "type": "string",
            "description": "Kerberos principal"
          },
          "zeppelin.shell.interpolation": {
            "name": "zeppelin.shell.interpolation",
            "value": false,
            "type": "checkbox",
            "description": "Enable ZeppelinContext variable interpolation into paragraph text"
          },
          "zeppelin.terminal.ip.mapping": {
            "name": "zeppelin.terminal.ip.mapping",
            "value": "",
            "type": "string",
            "description": "Internal and external IP mapping of zeppelin server"
          }
        },
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "sh",
            "class": "org.apache.zeppelin.shell.ShellInterpreter",
            "defaultInterpreter": true,
            "editor": {
              "language": "sh",
              "editOnDblClick": false,
              "completionSupport": false
            }
          },
          {
            "name": "terminal",
            "class": "org.apache.zeppelin.shell.TerminalInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "sh",
              "editOnDblClick": false,
              "completionSupport": false
            },
            "config": {
              "checkEmpty": false
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      },
      "spark": {
        "id": "spark",
        "name": "spark",
        "group": "spark",
        "properties": {
          "SPARK_HOME": {
            "name": "SPARK_HOME",
            "value": "/spark",
            "type": "string",
            "description": "Location of spark distribution"
          },
          "spark.master": {
            "name": "spark.master",
            "value": "k8s://https://kubernetes.default.svc",
            "type": "string",
            "description": "Spark master uri. local | yarn-client | yarn-cluster | spark master address of standalone mode, ex) spark://master_host:7077"
          },
          "spark.submit.deployMode": {
            "name": "spark.submit.deployMode",
            "value": "",
            "type": "string",
            "description": "The deploy mode of Spark driver program, either \"client\" or \"cluster\", Which means to launch driver program locally (\"client\") or remotely (\"cluster\") on one of the nodes inside the cluster."
          },
          "spark.app.name": {
            "name": "spark.app.name",
            "value": "",
            "type": "string",
            "description": "The name of spark application."
          },
          "spark.driver.cores": {
            "name": "spark.driver.cores",
            "value": "1",
            "type": "number",
            "description": "Number of cores to use for the driver process, only in cluster mode."
          },
          "spark.driver.memory": {
            "name": "spark.driver.memory",
            "value": "2g",
            "type": "string",
            "description": "Amount of memory to use for the driver process, i.e. where SparkContext is initialized, in the same format as JVM memory strings with a size unit suffix (\"k\", \"m\", \"g\" or \"t\") (e.g. 512m, 2g)."
          },
          "spark.executor.cores": {
            "name": "spark.executor.cores",
            "value": "1",
            "type": "number",
            "description": "The number of cores to use on each executor"
          },
          "spark.executor.memory": {
            "name": "spark.executor.memory",
            "value": "4g",
            "type": "string",
            "description": "Executor memory per worker instance. ex) 512m, 32g"
          },
          "spark.executor.instances": {
            "name": "spark.executor.instances",
            "value": "1",
            "type": "number",
            "description": "The number of executors for static allocation."
          },
          "spark.files": {
            "name": "spark.files",
            "value": "",
            "type": "string",
            "description": "Comma-separated list of files to be placed in the working directory of each executor. Globs are allowed."
          },
          "spark.jars": {
            "name": "spark.jars",
            "value": "",
            "type": "string",
            "description": "Comma-separated list of jars to include on the driver and executor classpaths. Globs are allowed."
          },
          "spark.jars.packages": {
            "name": "spark.jars.packages",
            "value": "com.google.guava:guava:30.1.1-jre",
            "type": "string",
            "description": "Comma-separated list of Maven coordinates of jars to include on the driver and executor classpaths. The coordinates should be groupId:artifactId:version. If spark.jars.ivySettings is given artifacts will be resolved according to the configuration in the file, otherwise artifacts will be searched for in the local maven repo, then maven central and finally any additional remote repositories given by the command-line option --repositories."
          },
          "zeppelin.spark.useHiveContext": {
            "name": "zeppelin.spark.useHiveContext",
            "value": true,
            "type": "checkbox",
            "description": "Use HiveContext instead of SQLContext if it is true. Enable hive for SparkSession."
          },
          "zeppelin.spark.printREPLOutput": {
            "name": "zeppelin.spark.printREPLOutput",
            "value": true,
            "type": "checkbox",
            "description": "Print REPL output"
          },
          "zeppelin.spark.maxResult": {
            "name": "zeppelin.spark.maxResult",
            "value": "1000",
            "type": "number",
            "description": "Max number of result to display."
          },
          "zeppelin.spark.enableSupportedVersionCheck": {
            "name": "zeppelin.spark.enableSupportedVersionCheck",
            "value": true,
            "type": "checkbox",
            "description": "Whether checking supported spark version. Developer only setting, not for production use"
          },
          "zeppelin.spark.uiWebUrl": {
            "name": "zeppelin.spark.uiWebUrl",
            "value": "",
            "type": "string",
            "description": "Override Spark UI default URL. In Kubernetes mode, value can be Jinja template string with 3 template variables \u0027PORT\u0027, \u0027SERVICE_NAME\u0027 and \u0027SERVICE_DOMAIN\u0027. (ex: http://{{PORT}}-{{SERVICE_NAME}}.{{SERVICE_DOMAIN}})"
          },
          "zeppelin.spark.ui.hidden": {
            "name": "zeppelin.spark.ui.hidden",
            "value": false,
            "type": "checkbox",
            "description": "Whether hide spark ui in zeppelin ui"
          },
          "spark.webui.yarn.useProxy": {
            "name": "spark.webui.yarn.useProxy",
            "value": false,
            "type": "checkbox",
            "description": "whether use yarn proxy url as spark weburl, e.g. http://localhost:8088/proxy/application_1583396598068_0004"
          },
          "zeppelin.spark.scala.color": {
            "name": "zeppelin.spark.scala.color",
            "value": true,
            "type": "checkbox",
            "description": "Whether enable color output of spark scala interpreter"
          },
          "zeppelin.spark.deprecatedMsg.show": {
            "name": "zeppelin.spark.deprecatedMsg.show",
            "value": true,
            "type": "checkbox",
            "description": "Whether show the spark deprecated message, spark 2.2 and before are deprecated. Zeppelin will display warning message by default"
          },
          "zeppelin.spark.concurrentSQL": {
            "name": "zeppelin.spark.concurrentSQL",
            "value": true,
            "type": "checkbox",
            "description": "Execute multiple SQL concurrently if set true."
          },
          "zeppelin.spark.concurrentSQL.max": {
            "name": "zeppelin.spark.concurrentSQL.max",
            "value": "10",
            "type": "number",
            "description": "Max number of SQL concurrently executed"
          },
          "zeppelin.spark.sql.stacktrace": {
            "name": "zeppelin.spark.sql.stacktrace",
            "value": true,
            "type": "checkbox",
            "description": "Show full exception stacktrace for SQL queries if set to true."
          },
          "zeppelin.spark.sql.interpolation": {
            "name": "zeppelin.spark.sql.interpolation",
            "value": true,
            "type": "checkbox",
            "description": "Enable ZeppelinContext variable interpolation into spark sql"
          },
          "PYSPARK_PYTHON": {
            "name": "PYSPARK_PYTHON",
            "value": "python",
            "type": "string",
            "description": "Python binary executable to use for PySpark in both driver and workers (default is python2.7 if available, otherwise python). Property `spark.pyspark.python` take precedence if it is set"
          },
          "PYSPARK_DRIVER_PYTHON": {
            "name": "PYSPARK_DRIVER_PYTHON",
            "value": "python",
            "type": "string",
            "description": "Python binary executable to use for PySpark in driver only (default is `PYSPARK_PYTHON`). Property `spark.pyspark.driver.python` take precedence if it is set"
          },
          "zeppelin.pyspark.useIPython": {
            "name": "zeppelin.pyspark.useIPython",
            "value": true,
            "type": "checkbox",
            "description": "Whether use IPython when it is available"
          },
          "zeppelin.R.knitr": {
            "name": "zeppelin.R.knitr",
            "value": true,
            "type": "checkbox",
            "description": "Whether use knitr or not"
          },
          "zeppelin.R.cmd": {
            "name": "zeppelin.R.cmd",
            "value": "R",
            "type": "string",
            "description": "R binary executable path"
          },
          "zeppelin.R.image.width": {
            "name": "zeppelin.R.image.width",
            "value": "100%",
            "type": "number",
            "description": "Image width of R plotting"
          },
          "zeppelin.R.render.options": {
            "name": "zeppelin.R.render.options",
            "value": "out.format \u003d \u0027html\u0027, comment \u003d NA, echo \u003d FALSE, results \u003d \u0027asis\u0027, message \u003d F, warning \u003d F, fig.retina \u003d 2",
            "type": "textarea",
            "description": ""
          },
          "zeppelin.kotlin.shortenTypes": {
            "name": "zeppelin.kotlin.shortenTypes",
            "value": true,
            "type": "checkbox",
            "description": "Show short types instead of full, e.g. List\u003cString\u003e or kotlin.collections.List\u003ckotlin.String\u003e"
          },
          "spark.sql.catalog.spark_catalog.type":{
            "name": "spark.sql.catalog.spark_catalog.type",
            "value": "hive",
            "type": "textarea"
          },
            "spark.sql.catalogImplementation":{
              "name": "spark.sql.catalogImplementation",
              "value": "hive",
              "type": "textarea"
          },
            "spark.hadoop.javax.jdo.option.ConnectionURL":{
              "name": "spark.hadoop.javax.jdo.option.ConnectionURL",
              "value": "jdbc:postgresql://_HOST:_PORT/_DBNAME",
              "type": "textarea"
          },
            "spark.hadoop.javax.jdo.option.ConnectionUserName":{
              "name": "spark.hadoop.javax.jdo.option.ConnectionUserName",
              "value": "_USERNAME",
              "type": "textarea"
          },
            "spark.hadoop.javax.jdo.option.ConnectionPassword":{
              "name": "spark.hadoop.javax.jdo.option.ConnectionPassword",
              "value": "_PASSWORD",
              "type": "textarea"
          },
              "spark.hadoop.javax.jdo.option.ConnectionDriverName":{
              "name": "spark.hadoop.javax.jdo.option.ConnectionDriverName",
              "value": "org.postgresql.Driver",
              "type": "textarea"
          },
    sparkConfigJSON  
        },
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "spark",
            "class": "org.apache.zeppelin.spark.SparkInterpreter",
            "defaultInterpreter": true,
            "editor": {
              "language": "scala",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": true
            }
          },
          {
            "name": "sql",
            "class": "org.apache.zeppelin.spark.SparkSqlInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "sql",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": true
            }
          },
          {
            "name": "pyspark",
            "class": "org.apache.zeppelin.spark.PySparkInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "python",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": true
            }
          },
          {
            "name": "ipyspark",
            "class": "org.apache.zeppelin.spark.IPySparkInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "python",
              "editOnDblClick": false,
              "completionSupport": true,
              "completionKey": "TAB"
            }
          },
          {
            "name": "r",
            "class": "org.apache.zeppelin.spark.SparkRInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "r",
              "editOnDblClick": false,
              "completionSupport": false,
              "completionKey": "TAB"
            }
          },
          {
            "name": "ir",
            "class": "org.apache.zeppelin.spark.SparkIRInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "r",
              "editOnDblClick": false,
              "completionSupport": true,
              "completionKey": "TAB"
            }
          },
          {
            "name": "shiny",
            "class": "org.apache.zeppelin.spark.SparkShinyInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "r",
              "editOnDblClick": false,
              "completionSupport": true,
              "completionKey": "TAB"
            }
          },
          {
            "name": "kotlin",
            "class": "org.apache.zeppelin.spark.KotlinSparkInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "kotlin",
              "editOnDblClick": false,
              "completionKey": "TAB",
              "completionSupport": false
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "perNote": "shared",
          "perUser": "shared",
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      },
      "md": {
        "id": "md",
        "name": "md",
        "group": "md",
        "properties": {
          "markdown.parser.type": {
            "name": "markdown.parser.type",
            "value": "flexmark",
            "type": "string",
            "description": "Markdown Parser Type. Available values: pegdown, markdown4j, flexmark. Default \u003d flexmark"
          }
        },
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "md",
            "class": "org.apache.zeppelin.markdown.Markdown",
            "defaultInterpreter": false,
            "editor": {
              "language": "markdown",
              "editOnDblClick": true,
              "completionSupport": false
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      },
      "jdbc": {
        "id": "jdbc",
        "name": "jdbc",
        "group": "jdbc",
        "properties": {
          "default.url": {
            "name": "default.url",
            "value": "jdbc:postgresql://localhost:5432/",
            "type": "string",
            "description": "The URL for JDBC."
          },
          "default.user": {
            "name": "default.user",
            "value": "gpadmin",
            "type": "string",
            "description": "The JDBC user name"
          },
          "default.password": {
            "name": "default.password",
            "value": "",
            "type": "password",
            "description": "The JDBC user password"
          },
          "default.driver": {
            "name": "default.driver",
            "value": "org.postgresql.Driver",
            "type": "string",
            "description": "JDBC Driver Name"
          },
          "default.completer.ttlInSeconds": {
            "name": "default.completer.ttlInSeconds",
            "value": "120",
            "type": "number",
            "description": "Time to live sql completer in seconds (-1 to update everytime, 0 to disable update)"
          },
          "default.completer.schemaFilters": {
            "name": "default.completer.schemaFilters",
            "value": "",
            "type": "textarea",
            "description": "Сomma separated schema (schema \u003d catalog \u003d database) filters to get metadata for completions. Supports \u0027%\u0027 symbol is equivalent to any set of characters. (ex. prod_v_%,public%,info)"
          },
          "default.precode": {
            "name": "default.precode",
            "value": "",
            "type": "textarea",
            "description": "SQL which executes while opening connection"
          },
          "default.statementPrecode": {
            "name": "default.statementPrecode",
            "value": "",
            "type": "textarea",
            "description": "Runs before each run of the paragraph, in the same connection"
          },
          "common.max_count": {
            "name": "common.max_count",
            "value": "1000",
            "type": "number",
            "description": "Max number of SQL result to display."
          },
          "zeppelin.jdbc.auth.type": {
            "name": "zeppelin.jdbc.auth.type",
            "value": "",
            "type": "string",
            "description": "If auth type is needed, Example: KERBEROS"
          },
          "zeppelin.jdbc.auth.kerberos.proxy.enable": {
            "name": "zeppelin.jdbc.auth.kerberos.proxy.enable",
            "value": "true",
            "type": "checkbox",
            "description": "When auth type is Kerberos, enable/disable Kerberos proxy with the login user to get the connection. Default value is true."
          },
          "zeppelin.jdbc.concurrent.use": {
            "name": "zeppelin.jdbc.concurrent.use",
            "value": true,
            "type": "checkbox",
            "description": "Use parallel scheduler"
          },
          "zeppelin.jdbc.concurrent.max_connection": {
            "name": "zeppelin.jdbc.concurrent.max_connection",
            "value": "10",
            "type": "number",
            "description": "Number of concurrent execution"
          },
          "zeppelin.jdbc.keytab.location": {
            "name": "zeppelin.jdbc.keytab.location",
            "value": "",
            "type": "string",
            "description": "Kerberos keytab location"
          },
          "zeppelin.jdbc.principal": {
            "name": "zeppelin.jdbc.principal",
            "value": "",
            "type": "string",
            "description": "Kerberos principal"
          },
          "zeppelin.jdbc.interpolation": {
            "name": "zeppelin.jdbc.interpolation",
            "value": false,
            "type": "checkbox",
            "description": "Enable ZeppelinContext variable interpolation into paragraph text"
          },
          "zeppelin.jdbc.maxConnLifetime": {
            "name": "zeppelin.jdbc.maxConnLifetime",
            "value": "-1",
            "type": "number",
            "description": "Maximum of connection lifetime in milliseconds. A value of zero or less means the connection has an infinite lifetime."
          },
          "zeppelin.jdbc.maxRows": {
            "name": "zeppelin.jdbc.maxRows",
            "value": "1000",
            "type": "number",
            "description": "Maximum number of rows fetched from the query."
          },
          "zeppelin.jdbc.hive.timeout.threshold": {
            "name": "zeppelin.jdbc.hive.timeout.threshold",
            "value": "60000",
            "type": "number",
            "description": "Timeout for hive job timeout"
          },
          "zeppelin.jdbc.hive.monitor.query_interval": {
            "name": "zeppelin.jdbc.hive.monitor.query_interval",
            "value": "1000",
            "type": "number",
            "description": "Query interval for hive statement"
          }
        },
        "status": "READY",
        "interpreterGroup": [
          {
            "name": "sql",
            "class": "org.apache.zeppelin.jdbc.JDBCInterpreter",
            "defaultInterpreter": false,
            "editor": {
              "language": "sql",
              "editOnDblClick": false,
              "completionSupport": true
            }
          }
        ],
        "dependencies": [],
        "option": {
          "remote": true,
          "port": -1,
          "isExistingProcess": false,
          "setPermission": false,
          "owners": [],
          "isUserImpersonate": false
        }
      }
    },
    "interpreterRepositories": [
      {
        "id": "central",
        "type": "default",
        "url": "https://repo1.maven.org/maven2/",
        "host": "repo1.maven.org",
        "protocol": "https",
        "releasePolicy": {
          "enabled": true,
          "updatePolicy": "daily",
          "checksumPolicy": "warn"
        },
        "snapshotPolicy": {
          "enabled": true,
          "updatePolicy": "daily",
          "checksumPolicy": "warn"
        },
        "mirroredRepositories": [],
        "repositoryManager": false
      },
      {
        "id": "local",
        "type": "default",
        "url": "file:///root/.m2/repository",
        "host": "",
        "protocol": "file",
        "releasePolicy": {
          "enabled": true,
          "updatePolicy": "daily",
          "checksumPolicy": "warn"
        },
        "snapshotPolicy": {
          "enabled": true,
          "updatePolicy": "daily",
          "checksumPolicy": "warn"
        },
        "mirroredRepositories": [],
        "repositoryManager": false
      }
    ]
  }